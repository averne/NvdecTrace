#pragma once

#include <ctrl2080.h>
#include <ctrl906f.h>
#include <ctrla06f.h>

const char *get_nvdec_reg_name(std::uint32_t reg) {
    #define CASE(reg) case reg: return #reg;
    switch (reg) {
        CASE(NVA16F_SET_OBJECT)
        CASE(NVA16F_ILLEGAL)
        CASE(NVA16F_NOP)
        CASE(NVA16F_SEMAPHOREA)
        CASE(NVA16F_SEMAPHOREB)
        CASE(NVA16F_SEMAPHOREC)
        CASE(NVA16F_SEMAPHORED)
        CASE(NVA16F_NON_STALL_INTERRUPT)
        CASE(NVA16F_FB_FLUSH)
#if defined(GPFIFO_VOLTA)
        CASE(NVC36F_MEM_OP_C)
        CASE(NVC36F_MEM_OP_D)
#endif
        CASE(NVA16F_SET_REFERENCE)
        CASE(NVA16F_WFI)
        CASE(NVA16F_CRC_CHECK)
        CASE(NVA16F_YIELD)
#if defined(GPFIFO_VOLTA)
        CASE(NVC36F_SEM_ADDR_LO)
        CASE(NVC36F_SEM_ADDR_HI)
        CASE(NVC36F_SEM_PAYLOAD_LO)
        CASE(NVC36F_SEM_PAYLOAD_HI)
        CASE(NVC36F_SEM_EXECUTE)
#endif
        CASE(NVC7B0_VIDEO_DECODER)
        CASE(NVC7B0_NOP)
        CASE(NVC7B0_PM_TRIGGER)
        CASE(NVC7B0_SET_APPLICATION_ID)
        CASE(NVC7B0_SET_WATCHDOG_TIMER)
        CASE(NVC7B0_SEMAPHORE_A)
        CASE(NVC7B0_SEMAPHORE_B)
        CASE(NVC7B0_SEMAPHORE_C)
        CASE(NVC7B0_CTX_SAVE_AREA)
        CASE(NVC7B0_CTX_SWITCH)
        CASE(NVC7B0_SET_SEMAPHORE_PAYLOAD_LOWER)
        CASE(NVC7B0_SET_SEMAPHORE_PAYLOAD_UPPER)
        CASE(NVC7B0_SET_MONITORED_FENCE_SIGNAL_ADDRESS_BASE_A)
        CASE(NVC7B0_SET_MONITORED_FENCE_SIGNAL_ADDRESS_BASE_B)
        CASE(NVC7B0_EXECUTE)
        CASE(NVC7B0_SEMAPHORE_D)
        CASE(NVC7B0_SET_PREDICATION_OFFSET_UPPER)
        CASE(NVC7B0_SET_PREDICATION_OFFSET_LOWER)
        CASE(NVC7B0_SET_AUXILIARY_DATA_BUFFER)
        CASE(NVC7B0_SET_CONTROL_PARAMS)
        CASE(NVC7B0_SET_DRV_PIC_SETUP_OFFSET)
        CASE(NVC7B0_SET_IN_BUF_BASE_OFFSET)
        CASE(NVC7B0_SET_PICTURE_INDEX)
        CASE(NVC7B0_SET_SLICE_OFFSETS_BUF_OFFSET)
        CASE(NVC7B0_SET_COLOC_DATA_OFFSET)
        CASE(NVC7B0_SET_HISTORY_OFFSET)
        CASE(NVC7B0_SET_DISPLAY_BUF_SIZE)
        CASE(NVC7B0_SET_HISTOGRAM_OFFSET)
        CASE(NVC7B0_SET_NVDEC_STATUS_OFFSET)
        CASE(NVC7B0_SET_DISPLAY_BUF_LUMA_OFFSET)
        CASE(NVC7B0_SET_DISPLAY_BUF_CHROMA_OFFSET)
        CASE(NVC7B0_SET_PICTURE_LUMA_OFFSET0)
        CASE(NVC7B0_SET_PICTURE_LUMA_OFFSET1)
        CASE(NVC7B0_SET_PICTURE_LUMA_OFFSET2)
        CASE(NVC7B0_SET_PICTURE_LUMA_OFFSET3)
        CASE(NVC7B0_SET_PICTURE_LUMA_OFFSET4)
        CASE(NVC7B0_SET_PICTURE_LUMA_OFFSET5)
        CASE(NVC7B0_SET_PICTURE_LUMA_OFFSET6)
        CASE(NVC7B0_SET_PICTURE_LUMA_OFFSET7)
        CASE(NVC7B0_SET_PICTURE_LUMA_OFFSET8)
        CASE(NVC7B0_SET_PICTURE_LUMA_OFFSET9)
        CASE(NVC7B0_SET_PICTURE_LUMA_OFFSET10)
        CASE(NVC7B0_SET_PICTURE_LUMA_OFFSET11)
        CASE(NVC7B0_SET_PICTURE_LUMA_OFFSET12)
        CASE(NVC7B0_SET_PICTURE_LUMA_OFFSET13)
        CASE(NVC7B0_SET_PICTURE_LUMA_OFFSET14)
        CASE(NVC7B0_SET_PICTURE_LUMA_OFFSET15)
        CASE(NVC7B0_SET_PICTURE_LUMA_OFFSET16)
        CASE(NVC7B0_SET_PICTURE_CHROMA_OFFSET0)
        CASE(NVC7B0_SET_PICTURE_CHROMA_OFFSET1)
        CASE(NVC7B0_SET_PICTURE_CHROMA_OFFSET2)
        CASE(NVC7B0_SET_PICTURE_CHROMA_OFFSET3)
        CASE(NVC7B0_SET_PICTURE_CHROMA_OFFSET4)
        CASE(NVC7B0_SET_PICTURE_CHROMA_OFFSET5)
        CASE(NVC7B0_SET_PICTURE_CHROMA_OFFSET6)
        CASE(NVC7B0_SET_PICTURE_CHROMA_OFFSET7)
        CASE(NVC7B0_SET_PICTURE_CHROMA_OFFSET8)
        CASE(NVC7B0_SET_PICTURE_CHROMA_OFFSET9)
        CASE(NVC7B0_SET_PICTURE_CHROMA_OFFSET10)
        CASE(NVC7B0_SET_PICTURE_CHROMA_OFFSET11)
        CASE(NVC7B0_SET_PICTURE_CHROMA_OFFSET12)
        CASE(NVC7B0_SET_PICTURE_CHROMA_OFFSET13)
        CASE(NVC7B0_SET_PICTURE_CHROMA_OFFSET14)
        CASE(NVC7B0_SET_PICTURE_CHROMA_OFFSET15)
        CASE(NVC7B0_SET_PICTURE_CHROMA_OFFSET16)
        CASE(NVC7B0_SET_PIC_SCRATCH_BUF_OFFSET)
        CASE(NVC7B0_SET_EXTERNAL_MVBUFFER_OFFSET)
        CASE(NVC7B0_SET_SUB_SAMPLE_MAP_OFFSET)
        CASE(NVC7B0_SET_SUB_SAMPLE_MAP_IV_OFFSET)
        CASE(NVC7B0_SET_INTRA_TOP_BUF_OFFSET)
        CASE(NVC7B0_SET_TILE_SIZE_BUF_OFFSET)
        CASE(NVC7B0_SET_FILTER_BUFFER_OFFSET)
        CASE(NVC7B0_SET_CRC_STRUCT_OFFSET)
        CASE(NVC7B0_SET_PR_SSM_CONTENT_INFO_BUF_OFFSET)
        CASE(NVC7B0_H264_SET_MBHIST_BUF_OFFSET)
        CASE(NVC7B0_VP8_SET_PROB_DATA_OFFSET)
        CASE(NVC7B0_VP8_SET_HEADER_PARTITION_BUF_BASE_OFFSET)
        CASE(NVC7B0_HEVC_SET_SCALING_LIST_OFFSET)
        CASE(NVC7B0_HEVC_SET_TILE_SIZES_OFFSET)
        CASE(NVC7B0_HEVC_SET_FILTER_BUFFER_OFFSET)
        CASE(NVC7B0_HEVC_SET_SAO_BUFFER_OFFSET)
        CASE(NVC7B0_HEVC_SET_SLICE_INFO_BUFFER_OFFSET)
        CASE(NVC7B0_HEVC_SET_SLICE_GROUP_INDEX)
        CASE(NVC7B0_VP9_SET_PROB_TAB_BUF_OFFSET)
        CASE(NVC7B0_VP9_SET_CTX_COUNTER_BUF_OFFSET)
        CASE(NVC7B0_VP9_SET_SEGMENT_READ_BUF_OFFSET)
        CASE(NVC7B0_VP9_SET_SEGMENT_WRITE_BUF_OFFSET)
        CASE(NVC7B0_VP9_SET_TILE_SIZE_BUF_OFFSET)
        CASE(NVC7B0_VP9_SET_COL_MVWRITE_BUF_OFFSET)
        CASE(NVC7B0_VP9_SET_COL_MVREAD_BUF_OFFSET)
        CASE(NVC7B0_VP9_SET_FILTER_BUFFER_OFFSET)
        CASE(NVC7B0_VP9_PARSER_SET_PIC_SETUP_OFFSET)
        CASE(NVC7B0_VP9_PARSER_SET_PREV_PIC_SETUP_OFFSET)
        CASE(NVC7B0_VP9_PARSER_SET_PROB_TAB_BUF_OFFSET)
        CASE(NVC7B0_PASS1_SET_CLEAR_HEADER_OFFSET)
        CASE(NVC7B0_PASS1_SET_RE_ENCRYPT_OFFSET)
        CASE(NVC7B0_PASS1_SET_VP8_TOKEN_OFFSET)
        CASE(NVC7B0_PASS1_SET_INPUT_DATA_OFFSET)
        CASE(NVC7B0_PASS1_SET_OUTPUT_DATA_SIZE_OFFSET)
        CASE(NVC7B0_AV1_SET_PROB_TAB_READ_BUF_OFFSET)
        CASE(NVC7B0_AV1_SET_PROB_TAB_WRITE_BUF_OFFSET)
        CASE(NVC7B0_AV1_SET_SEGMENT_READ_BUF_OFFSET)
        CASE(NVC7B0_AV1_SET_SEGMENT_WRITE_BUF_OFFSET)
        CASE(NVC7B0_AV1_SET_COL_MV0_READ_BUF_OFFSET)
        CASE(NVC7B0_AV1_SET_COL_MV1_READ_BUF_OFFSET)
        CASE(NVC7B0_AV1_SET_COL_MV2_READ_BUF_OFFSET)
        CASE(NVC7B0_AV1_SET_COL_MVWRITE_BUF_OFFSET)
        CASE(NVC7B0_AV1_SET_GLOBAL_MODEL_BUF_OFFSET)
        CASE(NVC7B0_AV1_SET_FILM_GRAIN_BUF_OFFSET)
        CASE(NVC7B0_AV1_SET_TILE_STREAM_INFO_BUF_OFFSET)
        CASE(NVC7B0_AV1_SET_SUB_STREAM_ENTRY_BUF_OFFSET)
        CASE(NVC7B0_H264_SET_SCALING_LIST_OFFSET)
        CASE(NVC7B0_H264_SET_VLDHIST_BUF_OFFSET)
        CASE(NVC7B0_H264_SET_EDOBOFFSET0)
        CASE(NVC7B0_H264_SET_EDOBOFFSET1)
        CASE(NVC7B0_H264_SET_EDOBOFFSET2)
        CASE(NVC7B0_H264_SET_EDOBOFFSET3)
        CASE(NVC7B0_SET_CONTENT_INITIAL_VECTOR(0))
        CASE(NVC7B0_SET_CONTENT_INITIAL_VECTOR(1))
        CASE(NVC7B0_SET_CONTENT_INITIAL_VECTOR(2))
        CASE(NVC7B0_SET_CONTENT_INITIAL_VECTOR(3))
        CASE(NVC7B0_SET_CTL_COUNT)
        CASE(NVC7B0_SET_UPPER_SRC)
        CASE(NVC7B0_SET_LOWER_SRC)
        CASE(NVC7B0_SET_UPPER_DST)
        CASE(NVC7B0_SET_LOWER_DST)
        CASE(NVC7B0_SET_BLOCK_COUNT)
        CASE(NVC7B0_PR_SET_REQUEST_BUF_OFFSET)
        CASE(NVC7B0_PR_SET_REQUEST_BUF_SIZE)
        CASE(NVC7B0_PR_SET_RESPONSE_BUF_OFFSET)
        CASE(NVC7B0_PR_SET_RESPONSE_BUF_SIZE)
        CASE(NVC7B0_PR_SET_REQUEST_MESSAGE_BUF_OFFSET)
        CASE(NVC7B0_PR_SET_RESPONSE_MESSAGE_BUF_OFFSET)
        CASE(NVC7B0_PR_SET_LOCAL_DECRYPT_BUF_OFFSET)
        CASE(NVC7B0_PR_SET_LOCAL_DECRYPT_BUF_SIZE)
        CASE(NVC7B0_PR_SET_CONTENT_DECRYPT_INFO_BUF_OFFSET)
        CASE(NVC7B0_PR_SET_REENCRYPTED_BITSTREAM_BUF_OFFSET)
        CASE(NVC7B0_DH_KE_SET_CHALLENGE_BUF_OFFSET)
        CASE(NVC7B0_DH_KE_SET_RESPONSE_BUF_OFFSET)
        CASE(NVC7B0_SET_SESSION_KEY(0))
        CASE(NVC7B0_SET_SESSION_KEY(1))
        CASE(NVC7B0_SET_SESSION_KEY(2))
        CASE(NVC7B0_SET_SESSION_KEY(3))
        CASE(NVC7B0_SET_CONTENT_KEY(0))
        CASE(NVC7B0_SET_CONTENT_KEY(1))
        CASE(NVC7B0_SET_CONTENT_KEY(2))
        CASE(NVC7B0_SET_CONTENT_KEY(3))
        CASE(NVC7B0_PM_TRIGGER_END)
        default: return "unknown";
    }
    #undef CASE
}

const char *get_dma_reg_name(std::uint32_t reg) {
    #define CASE(reg) case reg: return #reg;
    switch (reg) {
        CASE(NVA16F_SET_OBJECT)
        CASE(NVA16F_ILLEGAL)
        CASE(NVA16F_NOP)
        CASE(NVA16F_SEMAPHOREA)
        CASE(NVA16F_SEMAPHOREB)
        CASE(NVA16F_SEMAPHOREC)
        CASE(NVA16F_SEMAPHORED)
        CASE(NVA16F_NON_STALL_INTERRUPT)
        CASE(NVA16F_FB_FLUSH)
#if defined(GPFIFO_VOLTA)
        CASE(NVC36F_MEM_OP_C)
        CASE(NVC36F_MEM_OP_D)
#endif
        CASE(NVA16F_SET_REFERENCE)
        CASE(NVA16F_WFI)
        CASE(NVA16F_CRC_CHECK)
        CASE(NVA16F_YIELD)
#if defined(GPFIFO_VOLTA)
        CASE(NVC36F_SEM_ADDR_LO)
        CASE(NVC36F_SEM_ADDR_HI)
        CASE(NVC36F_SEM_PAYLOAD_LO)
        CASE(NVC36F_SEM_PAYLOAD_HI)
        CASE(NVC36F_SEM_EXECUTE)
#endif
        CASE(NVC7B5_NOP)
        CASE(NVC7B5_PM_TRIGGER)
        CASE(NVC7B5_SET_MONITORED_FENCE_TYPE)
        CASE(NVC7B5_SET_MONITORED_FENCE_SIGNAL_ADDR_BASE_UPPER)
        CASE(NVC7B5_SET_MONITORED_FENCE_SIGNAL_ADDR_BASE_LOWER)
        CASE(NVC7B5_SET_SEMAPHORE_A)
        CASE(NVC7B5_SET_SEMAPHORE_B)
        CASE(NVC7B5_SET_SEMAPHORE_PAYLOAD)
        CASE(NVC7B5_SET_SEMAPHORE_PAYLOAD_UPPER)
        CASE(NVC7B5_SET_RENDER_ENABLE_A)
        CASE(NVC7B5_SET_RENDER_ENABLE_B)
        CASE(NVC7B5_SET_RENDER_ENABLE_C)
        CASE(NVC7B5_SET_SRC_PHYS_MODE)
        CASE(NVC7B5_SET_DST_PHYS_MODE)
        CASE(NVC7B5_LAUNCH_DMA)
        CASE(NVC7B5_OFFSET_IN_UPPER)
        CASE(NVC7B5_OFFSET_IN_LOWER)
        CASE(NVC7B5_OFFSET_OUT_UPPER)
        CASE(NVC7B5_OFFSET_OUT_LOWER)
        CASE(NVC7B5_PITCH_IN)
        CASE(NVC7B5_PITCH_OUT)
        CASE(NVC7B5_LINE_LENGTH_IN)
        CASE(NVC7B5_LINE_COUNT)
        CASE(NVC7B5_SET_REMAP_CONST_A)
        CASE(NVC7B5_SET_REMAP_CONST_B)
        CASE(NVC7B5_SET_REMAP_COMPONENTS)
        CASE(NVC7B5_SET_DST_BLOCK_SIZE)
        CASE(NVC7B5_SET_DST_WIDTH)
        CASE(NVC7B5_SET_DST_HEIGHT)
        CASE(NVC7B5_SET_DST_DEPTH)
        CASE(NVC7B5_SET_DST_LAYER)
        CASE(NVC7B5_SET_DST_ORIGIN)
        CASE(NVC7B5_SET_SRC_BLOCK_SIZE)
        CASE(NVC7B5_SET_SRC_WIDTH)
        CASE(NVC7B5_SET_SRC_HEIGHT)
        CASE(NVC7B5_SET_SRC_DEPTH)
        CASE(NVC7B5_SET_SRC_LAYER)
        CASE(NVC7B5_SET_SRC_ORIGIN)
        CASE(NVC7B5_SRC_ORIGIN_X)
        CASE(NVC7B5_SRC_ORIGIN_Y)
        CASE(NVC7B5_DST_ORIGIN_X)
        CASE(NVC7B5_DST_ORIGIN_Y)
        CASE(NVC7B5_PM_TRIGGER_END)
        default: return "unknown";
    }
    #undef CASE
}

const char *get_engine_name(std::uint32_t e) {
    #define CASE(e) case e: return #e;
    switch (e) {
        CASE(NV2080_ENGINE_TYPE_NULL)
        CASE(NV2080_ENGINE_TYPE_GR0)
        CASE(NV2080_ENGINE_TYPE_GR1)
        CASE(NV2080_ENGINE_TYPE_GR2)
        CASE(NV2080_ENGINE_TYPE_GR3)
        CASE(NV2080_ENGINE_TYPE_GR4)
        CASE(NV2080_ENGINE_TYPE_GR5)
        CASE(NV2080_ENGINE_TYPE_GR6)
        CASE(NV2080_ENGINE_TYPE_GR7)
        CASE(NV2080_ENGINE_TYPE_COPY0)
        CASE(NV2080_ENGINE_TYPE_COPY1)
        CASE(NV2080_ENGINE_TYPE_COPY2)
        CASE(NV2080_ENGINE_TYPE_COPY3)
        CASE(NV2080_ENGINE_TYPE_COPY4)
        CASE(NV2080_ENGINE_TYPE_COPY5)
        CASE(NV2080_ENGINE_TYPE_COPY6)
        CASE(NV2080_ENGINE_TYPE_COPY7)
        CASE(NV2080_ENGINE_TYPE_COPY8)
        CASE(NV2080_ENGINE_TYPE_COPY9)
        CASE(NV2080_ENGINE_TYPE_NVDEC0)
        CASE(NV2080_ENGINE_TYPE_NVDEC1)
        CASE(NV2080_ENGINE_TYPE_NVDEC2)
        CASE(NV2080_ENGINE_TYPE_NVDEC3)
        CASE(NV2080_ENGINE_TYPE_NVDEC4)
        CASE(NV2080_ENGINE_TYPE_NVDEC5)
        CASE(NV2080_ENGINE_TYPE_NVDEC6)
        CASE(NV2080_ENGINE_TYPE_NVDEC7)
        CASE(NV2080_ENGINE_TYPE_NVENC0)
        CASE(NV2080_ENGINE_TYPE_NVENC1)
        CASE(NV2080_ENGINE_TYPE_NVENC2)
        CASE(NV2080_ENGINE_TYPE_VP)
        CASE(NV2080_ENGINE_TYPE_ME)
        CASE(NV2080_ENGINE_TYPE_PPP)
        CASE(NV2080_ENGINE_TYPE_MPEG)
        CASE(NV2080_ENGINE_TYPE_SW)
        CASE(NV2080_ENGINE_TYPE_TSEC)
        CASE(NV2080_ENGINE_TYPE_VIC)
        CASE(NV2080_ENGINE_TYPE_MP)
        CASE(NV2080_ENGINE_TYPE_SEC2)
        CASE(NV2080_ENGINE_TYPE_HOST)
        CASE(NV2080_ENGINE_TYPE_DPU)
        CASE(NV2080_ENGINE_TYPE_PMU)
        CASE(NV2080_ENGINE_TYPE_FBFLCN)
        CASE(NV2080_ENGINE_TYPE_NVJPEG0)
        CASE(NV2080_ENGINE_TYPE_NVJPEG1)
        CASE(NV2080_ENGINE_TYPE_NVJPEG2)
        CASE(NV2080_ENGINE_TYPE_NVJPEG3)
        CASE(NV2080_ENGINE_TYPE_NVJPEG4)
        CASE(NV2080_ENGINE_TYPE_NVJPEG5)
        CASE(NV2080_ENGINE_TYPE_NVJPEG6)
        CASE(NV2080_ENGINE_TYPE_NVJPEG7)
        CASE(NV2080_ENGINE_TYPE_OFA)
        CASE(NV2080_ENGINE_TYPE_COPY10)
        CASE(NV2080_ENGINE_TYPE_COPY11)
        CASE(NV2080_ENGINE_TYPE_COPY12)
        CASE(NV2080_ENGINE_TYPE_COPY13)
        CASE(NV2080_ENGINE_TYPE_COPY14)
        CASE(NV2080_ENGINE_TYPE_COPY15)
        CASE(NV2080_ENGINE_TYPE_COPY16)
        CASE(NV2080_ENGINE_TYPE_COPY17)
        CASE(NV2080_ENGINE_TYPE_COPY18)
        CASE(NV2080_ENGINE_TYPE_COPY19)
        CASE(NV2080_ENGINE_TYPE_OFA1)
        CASE(NV2080_ENGINE_TYPE_RESERVED3f)
        CASE(NV2080_ENGINE_TYPE_COMP_DECOMP_COPY0)
        CASE(NV2080_ENGINE_TYPE_COMP_DECOMP_COPY1)
        CASE(NV2080_ENGINE_TYPE_COMP_DECOMP_COPY2)
        CASE(NV2080_ENGINE_TYPE_COMP_DECOMP_COPY3)
        CASE(NV2080_ENGINE_TYPE_COMP_DECOMP_COPY4)
        CASE(NV2080_ENGINE_TYPE_COMP_DECOMP_COPY5)
        CASE(NV2080_ENGINE_TYPE_COMP_DECOMP_COPY6)
        CASE(NV2080_ENGINE_TYPE_COMP_DECOMP_COPY7)
        CASE(NV2080_ENGINE_TYPE_COMP_DECOMP_COPY8)
        CASE(NV2080_ENGINE_TYPE_COMP_DECOMP_COPY9)
        CASE(NV2080_ENGINE_TYPE_COMP_DECOMP_COPY10)
        CASE(NV2080_ENGINE_TYPE_COMP_DECOMP_COPY11)
        CASE(NV2080_ENGINE_TYPE_COMP_DECOMP_COPY12)
        CASE(NV2080_ENGINE_TYPE_COMP_DECOMP_COPY13)
        CASE(NV2080_ENGINE_TYPE_COMP_DECOMP_COPY14)
        CASE(NV2080_ENGINE_TYPE_COMP_DECOMP_COPY15)
        CASE(NV2080_ENGINE_TYPE_COMP_DECOMP_COPY16)
        CASE(NV2080_ENGINE_TYPE_COMP_DECOMP_COPY17)
        CASE(NV2080_ENGINE_TYPE_COMP_DECOMP_COPY18)
        CASE(NV2080_ENGINE_TYPE_COMP_DECOMP_COPY19)
        default: return "unknown";
    }
    #undef CASE
}

const char *get_class_name(std::uint32_t c) {
    #define CASE(c) case c: return #c;
    switch (c) {
        CASE(NV01_ROOT)
        CASE(NV01_ROOT_NON_PRIV)
        CASE(NV01_ROOT_CLIENT)
        CASE(FABRIC_MANAGER_SESSION)
        CASE(NV0020_GPU_MANAGEMENT)
        CASE(NV01_DEVICE_0)
        CASE(NV20_SUBDEVICE_0)
        CASE(NV2081_BINAPI)
        CASE(NV2082_BINAPI_PRIVILEGED)
        CASE(NV20_SUBDEVICE_DIAG)
        CASE(NV01_CONTEXT_DMA)
        CASE(NV01_MEMORY_SYSTEM)
        CASE(NV01_MEMORY_LOCAL_PRIVILEGED)
        CASE(NV01_MEMORY_LOCAL_USER)
        CASE(NV_MEMORY_EXTENDED_USER)
        CASE(NV01_MEMORY_VIRTUAL)
        CASE(NV_MEMORY_MAPPER)
        CASE(NV01_MEMORY_LOCAL_PHYSICAL)
        CASE(NV01_MEMORY_SYSTEM_OS_DESCRIPTOR)
        CASE(NV01_MEMORY_DEVICELESS)
        CASE(NV01_MEMORY_FRAMEBUFFER_CONSOLE)
        CASE(NV01_MEMORY_HW_RESOURCES)
        CASE(NV01_MEMORY_LIST_SYSTEM)
        CASE(NV01_MEMORY_LIST_FBMEM)
        CASE(NV01_MEMORY_LIST_OBJECT)
        CASE(NV01_MEMORY_FLA)
        CASE(NV_CE_UTILS)
        CASE(NV_MEMORY_FABRIC)
        CASE(FABRIC_VASPACE_A)
        CASE(NV_MEMORY_MULTICAST_FABRIC)
        CASE(IO_VASPACE_A)
        CASE(NV01_NULL)
        CASE(NV01_EVENT)
        CASE(NV01_EVENT_KERNEL_CALLBACK)
        CASE(NV01_EVENT_OS_EVENT)
        CASE(NV01_EVENT_KERNEL_CALLBACK_EX)
        CASE(NV01_TIMER)
        CASE(KERNEL_GRAPHICS_CONTEXT)
        CASE(NV50_CHANNEL_GPFIFO)
        CASE(GF100_CHANNEL_GPFIFO)
        CASE(KEPLER_CHANNEL_GPFIFO_A)
        CASE(UVM_CHANNEL_RETAINER)
        CASE(KEPLER_CHANNEL_GPFIFO_B)
        CASE(MAXWELL_CHANNEL_GPFIFO_A)
        CASE(PASCAL_CHANNEL_GPFIFO_A)
        CASE(VOLTA_CHANNEL_GPFIFO_A)
        CASE(TURING_CHANNEL_GPFIFO_A)
        CASE(AMPERE_CHANNEL_GPFIFO_A)
        CASE(HOPPER_CHANNEL_GPFIFO_A)
        CASE(NV04_SOFTWARE_TEST)
        CASE(NV30_GSYNC)
        CASE(VOLTA_USERMODE_A)
        CASE(TURING_USERMODE_A)
        CASE(AMPERE_USERMODE_A)
        CASE(HOPPER_USERMODE_A)
        CASE(NVC371_DISP_SF_USER)
        CASE(NVC372_DISPLAY_SW)
        CASE(NVC573_DISP_CAPABILITIES)
        CASE(NVC673_DISP_CAPABILITIES)
        CASE(NVC773_DISP_CAPABILITIES)
        CASE(NV04_DISPLAY_COMMON)
        CASE(NV50_DEFERRED_API_CLASS)
        CASE(MPS_COMPUTE)
        CASE(NVC570_DISPLAY)
        CASE(NVC57A_CURSOR_IMM_CHANNEL_PIO)
        CASE(NVC57B_WINDOW_IMM_CHANNEL_DMA)
        CASE(NVC57D_CORE_CHANNEL_DMA)
        CASE(NVC57E_WINDOW_CHANNEL_DMA)
        CASE(NVC670_DISPLAY)
        CASE(NVC671_DISP_SF_USER)
        CASE(NVC67A_CURSOR_IMM_CHANNEL_PIO)
        CASE(NVC67B_WINDOW_IMM_CHANNEL_DMA)
        CASE(NVC67D_CORE_CHANNEL_DMA)
        CASE(NVC67E_WINDOW_CHANNEL_DMA)
        CASE(NVC77F_ANY_CHANNEL_DMA)
        CASE(NVC770_DISPLAY)
        CASE(NVC771_DISP_SF_USER)
        CASE(NVC77D_CORE_CHANNEL_DMA)
        CASE(NV9010_VBLANK_CALLBACK)
        CASE(GF100_PROFILER)
        CASE(MAXWELL_PROFILER)
        CASE(MAXWELL_PROFILER_DEVICE)
        CASE(GF100_SUBDEVICE_MASTER)
        CASE(GF100_SUBDEVICE_INFOROM)
        CASE(GF100_ZBC_CLEAR)
        CASE(GF100_DISP_SW)
        CASE(GF100_TIMED_SEMAPHORE_SW)
        CASE(G84_PERFBUFFER)
        CASE(NV50_MEMORY_VIRTUAL)
        CASE(NV50_P2P)
        CASE(NV50_THIRD_PARTY_P2P)
        CASE(FERMI_TWOD_A)
        CASE(FERMI_VASPACE_A)
        CASE(HOPPER_SEC2_WORK_LAUNCH_A)
        CASE(GF100_HDACODEC)
        CASE(NVB8B0_VIDEO_DECODER)
        CASE(NVC4B0_VIDEO_DECODER)
        CASE(NVC6B0_VIDEO_DECODER)
        CASE(NVC7B0_VIDEO_DECODER)
        CASE(NVC9B0_VIDEO_DECODER)
        CASE(NVC4B7_VIDEO_ENCODER)
        CASE(NVB4B7_VIDEO_ENCODER)
        CASE(NVC7B7_VIDEO_ENCODER)
        CASE(NVC9B7_VIDEO_ENCODER)
        CASE(NVB8D1_VIDEO_NVJPG)
        CASE(NVC4D1_VIDEO_NVJPG)
        CASE(NVC9D1_VIDEO_NVJPG)
        CASE(NVB8FA_VIDEO_OFA)
        CASE(NVC6FA_VIDEO_OFA)
        CASE(NVC7FA_VIDEO_OFA)
        CASE(NVC9FA_VIDEO_OFA)
        CASE(KEPLER_INLINE_TO_MEMORY_B)
        CASE(FERMI_CONTEXT_SHARE_A)
        CASE(KEPLER_CHANNEL_GROUP_A)
        CASE(PASCAL_DMA_COPY_A)
        CASE(TURING_DMA_COPY_A)
        CASE(AMPERE_DMA_COPY_A)
        CASE(AMPERE_DMA_COPY_B)
        CASE(HOPPER_DMA_COPY_A)
        CASE(MAXWELL_DMA_COPY_A)
        CASE(ACCESS_COUNTER_NOTIFY_BUFFER)
        CASE(MMU_FAULT_BUFFER)
        CASE(MMU_VIDMEM_ACCESS_BIT_BUFFER)
        CASE(TURING_A)
        CASE(TURING_COMPUTE_A)
        CASE(AMPERE_A)
        CASE(AMPERE_COMPUTE_A)
        CASE(AMPERE_B)
        CASE(AMPERE_COMPUTE_B)
        CASE(ADA_A)
        CASE(ADA_COMPUTE_A)
        CASE(AMPERE_SMC_PARTITION_REF)
        CASE(AMPERE_SMC_EXEC_PARTITION_REF)
        CASE(AMPERE_SMC_CONFIG_SESSION)
        CASE(NV0092_RG_LINE_CALLBACK)
        CASE(AMPERE_SMC_MONITOR_SESSION)
        CASE(HOPPER_A)
        CASE(HOPPER_COMPUTE_A)
        CASE(NV40_DEBUG_BUFFER)
        CASE(RM_USER_SHARED_DATA)
        CASE(GT200_DEBUGGER)
        CASE(NV40_I2C)
        CASE(NVA081_VGPU_CONFIG)
        CASE(NVA084_KERNEL_HOST_VGPU_DEVICE)
        CASE(NV0060_SYNC_GPU_BOOST)
        CASE(GP100_UVM_SW)
        CASE(NV_EVENT_BUFFER)
        CASE(NV_CONFIDENTIAL_COMPUTE)
        CASE(NV_COUNTER_COLLECTION_UNIT)
        CASE(NV_SEMAPHORE_SURFACE)
        default: return "unknown";
    }
    #undef CASE
}

const char *get_control_name(std::uint32_t id) {
    #define CASE(id) case id: return #id;
    switch (id) {
        CASE(NV2080_CTRL_CMD_NULL)
        CASE(NV2080_CTRL_CMD_BIOS_GET_INFO)
        CASE(NV2080_CTRL_CMD_BIOS_GET_INFO_V2)
        CASE(NV2080_CTRL_CMD_BIOS_GET_NBSI)
        CASE(NV2080_CTRL_CMD_BIOS_GET_NBSI_V2)
        CASE(NV2080_CTRL_CMD_BIOS_GET_NBSI_OBJ)
        CASE(NV2080_CTRL_CMD_BIOS_GET_SKU_INFO)
        CASE(NV2080_CTRL_CMD_BIOS_GET_POST_TIME)
        CASE(NV2080_CTRL_CMD_BIOS_GET_UEFI_SUPPORT)
        CASE(NV2080_CTRL_CMD_BUS_GET_PCI_INFO)
        CASE(NV2080_CTRL_CMD_BUS_GET_INFO)
        CASE(NV2080_CTRL_CMD_BUS_GET_INFO_V2)
        CASE(NV2080_CTRL_CMD_BUS_GET_PCI_BAR_INFO)
        CASE(NV2080_CTRL_CMD_BUS_SET_PCIE_LINK_WIDTH)
        CASE(NV2080_CTRL_CMD_BUS_SET_PCIE_SPEED)
        CASE(NV2080_CTRL_CMD_BUS_MAP_BAR2)
        CASE(NV2080_CTRL_CMD_BUS_UNMAP_BAR2)
        CASE(NV2080_CTRL_CMD_BUS_VERIFY_BAR2)
        CASE(NV2080_CTRL_CMD_BUS_SERVICE_GPU_MULTIFUNC_STATE)
        CASE(NV2080_CTRL_CMD_BUS_GET_PEX_COUNTERS)
        CASE(NV2080_CTRL_CMD_BUS_CLEAR_PEX_COUNTERS)
        CASE(NV2080_CTRL_CMD_BUS_FREEZE_PEX_COUNTERS)
        CASE(NV2080_CTRL_CMD_BUS_GET_PEX_LANE_COUNTERS)
        CASE(NV2080_CTRL_CMD_BUS_GET_PCIE_LTR_LATENCY)
        CASE(NV2080_CTRL_CMD_BUS_SET_PCIE_LTR_LATENCY)
        CASE(NV2080_CTRL_CMD_BUS_GET_PEX_UTIL_COUNTERS)
        CASE(NV2080_CTRL_CMD_BUS_CLEAR_PEX_UTIL_COUNTERS)
        CASE(NV2080_CTRL_CMD_BUS_GET_BFD)
        CASE(NV2080_CTRL_CMD_BUS_GET_ASPM_DISABLE_FLAGS)
        CASE(NV2080_CTRL_CMD_BUS_CONTROL_PUBLIC_ASPM_BITS)
        CASE(NV2080_CTRL_CMD_BUS_GET_NVLINK_PEER_ID_MASK)
        CASE(NV2080_CTRL_CMD_BUS_SET_EOM_PARAMETERS)
        CASE(NV2080_CTRL_CMD_BUS_GET_UPHY_DLN_CFG_SPACE)
        CASE(NV2080_CTRL_CMD_BUS_GET_EOM_STATUS)
        CASE(NV2080_CTRL_CMD_BUS_GET_PCIE_REQ_ATOMICS_CAPS)
        CASE(NV2080_CTRL_CMD_BUS_GET_PCIE_SUPPORTED_GPU_ATOMICS)
        CASE(NV2080_CTRL_CMD_BUS_GET_C2C_INFO)
        CASE(NV2080_CTRL_CMD_BUS_SYSMEM_ACCESS)
        CASE(NV2080_CTRL_CMD_BUS_SET_P2P_MAPPING)
        CASE(NV2080_CTRL_CMD_BUS_UNSET_P2P_MAPPING)
        CASE(NV2080_CTRL_CMD_BUS_GET_PCIE_CPL_ATOMICS_CAPS)
        CASE(NV2080_CTRL_CMD_CE_GET_CAPS)
        CASE(NV2080_CTRL_CMD_CE_GET_CAPS_V2)
        CASE(NV2080_CTRL_CMD_CE_GET_CE_PCE_MASK)
        CASE(NV2080_CTRL_CMD_CE_SET_PCE_LCE_CONFIG)
        CASE(NV2080_CTRL_CMD_CE_UPDATE_PCE_LCE_MAPPINGS)
        CASE(NV2080_CTRL_CMD_CE_UPDATE_CLASS_DB)
        CASE(NV2080_CTRL_CMD_CE_GET_PHYSICAL_CAPS)
        CASE(NV2080_CTRL_CMD_CE_GET_FAULT_METHOD_BUFFER_SIZE)
        CASE(NV2080_CTRL_CMD_CE_GET_HUB_PCE_MASK)
        CASE(NV2080_CTRL_CMD_CE_GET_ALL_CAPS)
        CASE(NV2080_CTRL_CMD_CE_GET_ALL_PHYSICAL_CAPS)
        CASE(NV2080_CTRL_CMD_CE_GET_LCE_SHIM_INFO)
        CASE(NV2080_CTRL_CMD_CE_UPDATE_PCE_LCE_MAPPINGS_V2)
        CASE(NV2080_CTRL_CMD_CE_GET_HUB_PCE_MASK_V2)
        CASE(NV2080_CTRL_CMD_INTERNAL_CE_GET_PCE_CONFIG_FOR_LCE_TYPE)
        CASE(NV2080_CTRL_CMD_CE_GET_DECOMP_LCE_MASK)
        CASE(NV2080_CTRL_CMD_CE_IS_DECOMP_LCE_ENABLED)
        CASE(NV2080_CTRL_CMD_DMABUF_EXPORT_OBJECTS_TO_FD)
        CASE(NV2080_CTRL_CMD_DMA_INVALIDATE_TLB)
        CASE(NV2080_CTRL_CMD_DMA_GET_INFO)
        CASE(NV2080_CTRL_CMD_EVENT_SET_NOTIFICATION)
        CASE(NV2080_CTRL_CMD_EVENT_SET_TRIGGER)
        CASE(NV2080_CTRL_CMD_EVENT_SET_MEMORY_NOTIFIES)
        CASE(NV2080_CTRL_CMD_EVENT_SET_SEMAPHORE_MEMORY)
        CASE(NV2080_CTRL_CMD_EVENT_SET_GUEST_MSI)
        CASE(NV2080_CTRL_CMD_EVENT_SET_SEMA_MEM_VALIDATION)
        CASE(NV2080_CTRL_CMD_EVENT_SET_TRIGGER_FIFO)
        CASE(NV2080_CTRL_CMD_EVENT_VIDEO_BIND_EVTBUF)
        CASE(NV2080_CTRL_CMD_EVENT_RATS_GSP_TRACE_BIND_EVTBUF)
        CASE(NV2080_CTRL_CMD_FB_STATS_GET)
        CASE(NV2080_CTRL_CMD_SET_GPFIFO)
        CASE(NV2080_CTRL_CMD_FIFO_BIND_ENGINES)
        CASE(NV2080_CTRL_CMD_SET_OPERATIONAL_PROPERTIES)
        CASE(NV2080_CTRL_CMD_FIFO_GET_PHYSICAL_CHANNEL_COUNT)
        CASE(NV2080_CTRL_CMD_FIFO_GET_INFO)
        CASE(NV2080_CTRL_CMD_FIFO_CHANNEL_PREEMPTIVE_REMOVAL)
        CASE(NV2080_CTRL_CMD_FIFO_DISABLE_CHANNELS)
        CASE(NV2080_CTRL_CMD_FIFO_GET_CHANNEL_MEM_INFO)
        CASE(NV2080_CTRL_CMD_FIFO_GET_USERD_LOCATION)
        CASE(NV2080_CTRL_CMD_FIFO_OBJSCHED_SW_GET_LOG)
        CASE(NV2080_CTRL_CMD_FIFO_GET_DEVICE_INFO_TABLE)
        CASE(NV2080_CTRL_CMD_FIFO_CLEAR_FAULTED_BIT)
        CASE(NV2080_CTRL_CMD_FIFO_RUNLIST_SET_SCHED_POLICY)
        CASE(NV2080_CTRL_CMD_FIFO_UPDATE_CHANNEL_INFO)
        CASE(NV2080_CTRL_CMD_FIFO_DISABLE_USERMODE_CHANNELS)
        CASE(NV2080_CTRL_CMD_FIFO_SETUP_VF_ZOMBIE_SUBCTX_PDB)
        CASE(NV2080_CTRL_CMD_FIFO_GET_ALLOCATED_CHANNELS)
        CASE(NV2080_CTRL_CMD_FIFO_DISABLE_CHANNELS_FOR_KEY_ROTATION)
        CASE(NV2080_CTRL_CMD_FIFO_DISABLE_CHANNELS_FOR_KEY_ROTATION_V2)
        CASE(NV2080_CTRL_CMD_FIFO_OBJSCHED_GET_STATE)
        CASE(NV2080_CTRL_CMD_FIFO_OBJSCHED_SET_STATE)
        CASE(NV2080_CTRL_CMD_FIFO_OBJSCHED_GET_CAPS)
        CASE(NV2080_CTRL_CMD_FLA_RANGE)
        CASE(NV2080_CTRL_CMD_FLA_SETUP_INSTANCE_MEM_BLOCK)
        CASE(NV2080_CTRL_CMD_FLA_GET_RANGE)
        CASE(NV2080_CTRL_CMD_FLA_GET_FABRIC_MEM_STATS)
        CASE(NV2080_CTRL_CMD_FLCN_GET_DMEM_USAGE)
        CASE(NV2080_CTRL_CMD_FLCN_GET_ENGINE_ARCH)
        CASE(NV2080_CTRL_CMD_FLCN_USTREAMER_QUEUE_INFO)
        CASE(NV2080_CTRL_CMD_FLCN_USTREAMER_CONTROL_GET)
        CASE(NV2080_CTRL_CMD_FLCN_USTREAMER_CONTROL_SET)
        CASE(NV2080_CTRL_CMD_FLCN_GET_CTX_BUFFER_INFO)
        CASE(NV2080_CTRL_CMD_FLCN_GET_CTX_BUFFER_SIZE)
        CASE(NV2080_CTRL_CMD_INTERNAL_GPIO_PROGRAM_DIRECTION)
        CASE(NV2080_CTRL_CMD_INTERNAL_GPIO_PROGRAM_OUTPUT)
        CASE(NV2080_CTRL_CMD_INTERNAL_GPIO_READ_INPUT)
        CASE(NV2080_CTRL_CMD_INTERNAL_GPIO_ACTIVATE_HW_FUNCTION)
        CASE(NV2080_CTRL_CMD_GPU_GET_COMPUTE_PROFILES)
        CASE(NV2080_CTRL_CMD_GET_GPU_FABRIC_PROBE_INFO)
        CASE(NV2080_CTRL_CMD_GPU_GET_CONSTRUCTED_FALCON_INFO)
        CASE(NV2080_CTRL_CMD_GPU_GET_VF_CAPS)
        CASE(NV2080_CTRL_CMD_GRMGR_GET_GR_FS_INFO)
        CASE(NV2080_CTRL_CMD_GSP_GET_FEATURES)
        CASE(NV2080_CTRL_CMD_GSP_GET_RM_HEAP_STATS)
        CASE(NV2080_CTRL_CMD_HSHUB_GET_AVAILABLE_MASK)
        CASE(NV2080_CTRL_CMD_HSHUB_SET_EC_THROTTLE_MODE)
        CASE(NV2080_CTRL_CMD_I2C_READ_BUFFER)
        CASE(NV2080_CTRL_CMD_I2C_WRITE_BUFFER)
        CASE(NV2080_CTRL_CMD_I2C_READ_REG)
        CASE(NV2080_CTRL_CMD_I2C_WRITE_REG)
        CASE(NV2080_CTRL_CMD_I2C_ACCESS)
        CASE(NV2080_CTRL_CMD_I2C_ENABLE_MONITOR_3D_MODE)
        CASE(NV2080_CTRL_CMD_INTERNAL_DISPLAY_GET_STATIC_INFO)
        CASE(NV2080_CTRL_CMD_INTERNAL_MEMSYS_GET_STATIC_CONFIG)
        CASE(NV2080_CTRL_CMD_INTERNAL_UVM_REGISTER_ACCESS_CNTR_BUFFER)
        CASE(NV2080_CTRL_CMD_INTERNAL_UVM_UNREGISTER_ACCESS_CNTR_BUFFER)
        CASE(NV2080_CTRL_CMD_INTERNAL_STATIC_KGR_GET_CAPS)
        CASE(NV2080_CTRL_CMD_INTERNAL_STATIC_KGR_GET_GLOBAL_SM_ORDER)
        CASE(NV2080_CTRL_CMD_INTERNAL_STATIC_KGR_GET_FLOORSWEEPING_MASKS)
        CASE(NV2080_CTRL_CMD_KGR_GET_CTX_BUFFER_PTES)
        CASE(NV2080_CTRL_CMD_INTERNAL_STATIC_KGR_GET_INFO)
        CASE(NV2080_CTRL_CMD_INTERNAL_STATIC_KGR_GET_ZCULL_INFO)
        CASE(NV2080_CTRL_CMD_INTERNAL_STATIC_KGR_GET_ROP_INFO)
        CASE(NV2080_CTRL_CMD_INTERNAL_STATIC_KGR_GET_PPC_MASKS)
        CASE(NV2080_CTRL_CMD_INTERNAL_STATIC_KGR_GET_CONTEXT_BUFFERS_INFO)
        CASE(NV2080_CTRL_CMD_INTERNAL_STATIC_KGR_GET_SM_ISSUE_RATE_MODIFIER)
        CASE(NV2080_CTRL_CMD_INTERNAL_GPU_GET_CHIP_INFO)
        CASE(NV2080_CTRL_CMD_INTERNAL_GR_SET_FECS_TRACE_HW_ENABLE)
        CASE(NV2080_CTRL_CMD_INTERNAL_GR_GET_FECS_TRACE_HW_ENABLE)
        CASE(NV2080_CTRL_CMD_INTERNAL_GR_SET_FECS_TRACE_RD_OFFSET)
        CASE(NV2080_CTRL_CMD_INTERNAL_GR_SET_FECS_TRACE_WR_OFFSET)
        CASE(NV2080_CTRL_CMD_INTERNAL_GR_GET_FECS_TRACE_RD_OFFSET)
        CASE(NV2080_CTRL_CMD_INTERNAL_STATIC_KGR_GET_FECS_RECORD_SIZE)
        CASE(NV2080_CTRL_CMD_INTERNAL_STATIC_KGR_GET_FECS_TRACE_DEFINES)
        CASE(NV2080_CTRL_CMD_INTERNAL_GET_DEVICE_INFO_TABLE)
        CASE(NV2080_CTRL_CMD_INTERNAL_GPU_GET_USER_REGISTER_ACCESS_MAP)
        CASE(NV2080_CTRL_CMD_INTERNAL_KMIGMGR_PROMOTE_GPU_INSTANCE_MEM_RANGE)
        CASE(NV2080_CTRL_CMD_INTERNAL_MIGMGR_PROMOTE_GPU_INSTANCE_MEM_RANGE)
        CASE(NV2080_CTRL_CMD_INTERNAL_KGR_INIT_BUG4208224_WAR)
        CASE(NV2080_CTRL_CMD_INTERNAL_STATIC_KGR_GET_PDB_PROPERTIES)
        CASE(NV2080_CTRL_CMD_INTERNAL_DISPLAY_WRITE_INST_MEM)
        CASE(NV2080_CTRL_CMD_INTERNAL_RECOVER_ALL_COMPUTE_CONTEXTS)
        CASE(NV2080_CTRL_CMD_INTERNAL_DISPLAY_GET_IP_VERSION)
        CASE(NV2080_CTRL_CMD_INTERNAL_GPU_GET_SMC_MODE)
        CASE(NV2080_CTRL_CMD_INTERNAL_DISPLAY_SETUP_RG_LINE_INTR)
        CASE(NV2080_CTRL_CMD_INTERNAL_MEMSYS_SET_PARTITIONABLE_MEM)
        CASE(NV2080_CTRL_CMD_INTERNAL_FIFO_PROMOTE_RUNLIST_BUFFERS)
        CASE(NV2080_CTRL_CMD_INTERNAL_DISPLAY_SET_IMP_INIT_INFO)
        CASE(NV2080_CTRL_CMD_INTERNAL_GET_EGPU_BRIDGE_INFO)
        CASE(NV2080_CTRL_CMD_INTERNAL_BUS_FLUSH_WITH_SYSMEMBAR)
        CASE(NV2080_CTRL_CMD_INTERNAL_BUS_SETUP_P2P_MAILBOX_LOCAL)
        CASE(NV2080_CTRL_CMD_INTERNAL_BUS_SETUP_P2P_MAILBOX_REMOTE)
        CASE(NV2080_CTRL_CMD_INTERNAL_BUS_DESTROY_P2P_MAILBOX)
        CASE(NV2080_CTRL_CMD_INTERNAL_BUS_CREATE_C2C_PEER_MAPPING)
        CASE(NV2080_CTRL_CMD_INTERNAL_BUS_REMOVE_C2C_PEER_MAPPING)
        CASE(NV2080_CTRL_CMD_INTERNAL_VMMU_GET_SPA_FOR_GPA_ENTRIES)
        CASE(NV2080_CTRL_CMD_INTERNAL_DISPLAY_CHANNEL_PUSHBUFFER)
        CASE(NV2080_CTRL_CMD_INTERNAL_GMMU_GET_STATIC_INFO)
        CASE(NV2080_CTRL_CMD_INTERNAL_GR_GET_CTXSW_MODES)
        CASE(NV2080_CTRL_CMD_INTERNAL_FB_GET_HEAP_RESERVATION_SIZE)
        CASE(NV2080_CTRL_CMD_INTERNAL_INTR_GET_KERNEL_TABLE)
        CASE(NV2080_CTRL_CMD_INTERNAL_PERF_PERFMON_CLIENT_RESERVATION_CHECK)
        CASE(NV2080_CTRL_CMD_INTERNAL_PERF_PERFMON_CLIENT_RESERVATION_SET)
        CASE(NV2080_CTRL_CMD_INTERNAL_DISPLAY_GET_ACTIVE_DISPLAY_DEVICES)
        CASE(NV2080_CTRL_CMD_INTERNAL_STATIC_MIGMGR_GET_SWIZZ_ID_FB_MEM_PAGE_RANGES)
        CASE(NV2080_CTRL_CMD_INTERNAL_FIFO_GET_NUM_CHANNELS)
        CASE(NV2080_CTRL_CMD_INTERNAL_STATIC_KMIGMGR_GET_PROFILES)
        CASE(NV2080_CTRL_CMD_INTERNAL_STATIC_KMIGMGR_GET_PARTITIONABLE_ENGINES)
        CASE(NV2080_CTRL_CMD_INTERNAL_STATIC_KMIGMGR_GET_SWIZZ_ID_FB_MEM_PAGE_RANGES)
        CASE(NV2080_CTRL_CMD_INTERNAL_MEMSYS_GET_MIG_MEMORY_CONFIG)
        CASE(NV2080_CTRL_CMD_INTERNAL_KMEMSYS_GET_MIG_MEMORY_CONFIG)
        CASE(NV2080_CTRL_CMD_INTERNAL_MEMSYS_GET_MIG_MEMORY_PARTITION_TABLE)
        CASE(NV2080_CTRL_CMD_INTERNAL_RC_WATCHDOG_TIMEOUT)
        CASE(NV2080_CTRL_CMD_INTERNAL_PERF_CUDA_LIMIT_DISABLE)
        CASE(NV2080_CTRL_CMD_INTERNAL_PERF_OPTP_CLI_CLEAR)
        CASE(NV2080_CTRL_CMD_INTERNAL_PERF_GET_AUX_POWER_STATE)
        CASE(NV2080_CTRL_CMD_INTERNAL_PERF_BOOST_SET_2X)
        CASE(NV2080_CTRL_CMD_INTERNAL_PERF_GPU_BOOST_SYNC_SET_CONTROL)
        CASE(NV2080_CTRL_CMD_INTERNAL_PERF_GPU_BOOST_SYNC_SET_LIMITS)
        CASE(NV2080_CTRL_CMD_INTERNAL_PERF_GPU_BOOST_SYNC_GET_INFO)
        CASE(NV2080_CTRL_CMD_INTERNAL_GMMU_REGISTER_FAULT_BUFFER)
        CASE(NV2080_CTRL_CMD_INTERNAL_GMMU_UNREGISTER_FAULT_BUFFER)
        CASE(NV2080_CTRL_CMD_INTERNAL_GMMU_REGISTER_CLIENT_SHADOW_FAULT_BUFFER)
        CASE(NV2080_CTRL_CMD_INTERNAL_GMMU_UNREGISTER_CLIENT_SHADOW_FAULT_BUFFER)
        CASE(NV2080_CTRL_CMD_INTERNAL_GMMU_COPY_RESERVED_SPLIT_GVASPACE_PDES_TO_SERVER)
        CASE(NV2080_CTRL_CMD_INTERNAL_PERF_BOOST_SET_3X)
        CASE(NV2080_CTRL_CMD_INTERNAL_PERF_BOOST_CLEAR_3X)
        CASE(NV2080_CTRL_CMD_INTERNAL_STATIC_GRMGR_GET_SKYLINE_INFO)
        CASE(NV2080_CTRL_CMD_INTERNAL_MIGMGR_SET_PARTITIONING_MODE)
        CASE(NV2080_CTRL_CMD_INTERNAL_MIGMGR_CONFIGURE_GPU_INSTANCE)
        CASE(NV2080_CTRL_CMD_INTERNAL_MIGMGR_SET_GPU_INSTANCES)
        CASE(NV2080_CTRL_CMD_INTERNAL_MIGMGR_GET_GPU_INSTANCES)
        CASE(NV2080_CTRL_CMD_INTERNAL_MEMSYS_SET_ZBC_REFERENCED)
        CASE(NV2080_CTRL_CMD_INTERNAL_KMIGMGR_EXPORT_GPU_INSTANCE)
        CASE(NV2080_CTRL_CMD_INTERNAL_MIGMGR_EXPORT_GPU_INSTANCE)
        CASE(NV2080_CTRL_CMD_INTERNAL_KMIGMGR_IMPORT_GPU_INSTANCE)
        CASE(NV2080_CTRL_CMD_INTERNAL_MIGMGR_IMPORT_GPU_INSTANCE)
        CASE(NV2080_CTRL_CMD_INTERNAL_MEMSYS_L2_INVALIDATE_EVICT)
        CASE(NV2080_CTRL_CMD_INTERNAL_MEMSYS_FLUSH_L2_ALL_RAMS_AND_CACHES)
        CASE(NV2080_CTRL_CMD_INTERNAL_BIF_GET_STATIC_INFO)
        CASE(NV2080_CTRL_CMD_INTERNAL_HSHUB_PEER_CONN_CONFIG)
        CASE(NV2080_CTRL_CMD_INTERNAL_HSHUB_FIRST_LINK_PEER_ID)
        CASE(NV2080_CTRL_CMD_INTERNAL_HSHUB_GET_HSHUB_ID_FOR_LINKS)
        CASE(NV2080_CTRL_CMD_INTERNAL_HSHUB_GET_NUM_UNITS)
        CASE(NV2080_CTRL_CMD_INTERNAL_HSHUB_NEXT_HSHUB_ID)
        CASE(NV2080_CTRL_CMD_INTERNAL_HSHUB_EGM_CONFIG)
        CASE(NV2080_CTRL_CMD_INTERNAL_NVLINK_ENABLE_COMPUTE_PEER_ADDR)
        CASE(NV2080_CTRL_CMD_INTERNAL_NVLINK_GET_SET_NVSWITCH_FABRIC_ADDR)
        CASE(NV2080_CTRL_CMD_INTERNAL_BIF_GET_ASPM_L1_FLAGS)
        CASE(NV2080_CTRL_CMD_INTERNAL_PERF_CF_CONTROLLERS_SET_MAX_VGPU_VM_COUNT)
        CASE(NV2080_CTRL_CMD_INTERNAL_MEMSYS_DISABLE_NVLINK_PEERS)
        CASE(NV2080_CTRL_CMD_INTERNAL_MEMSYS_PROGRAM_RAW_COMPRESSION_MODE)
        CASE(NV2080_CTRL_CMD_INTERNAL_CCU_GET_SAMPLE_INFO)
        CASE(NV2080_CTRL_CMD_INTERNAL_CCU_MAP)
        CASE(NV2080_CTRL_CMD_INTERNAL_CCU_UNMAP)
        CASE(NV2080_CTRL_CMD_INTERNAL_SET_P2P_CAPS)
        CASE(NV2080_CTRL_CMD_INTERNAL_REMOVE_P2P_CAPS)
        CASE(NV2080_CTRL_CMD_INTERNAL_GET_PCIE_P2P_CAPS)
        CASE(NV2080_CTRL_CMD_INTERNAL_BIF_SET_PCIE_RO)
        CASE(NV2080_CTRL_CMD_INTERNAL_DISPLAY_PRE_UNIX_CONSOLE)
        CASE(NV2080_CTRL_CMD_INTERNAL_DISPLAY_POST_UNIX_CONSOLE)
        CASE(NV2080_CTRL_CMD_INTERNAL_STATIC_KMIGMGR_GET_COMPUTE_PROFILES)
        CASE(NV2080_CTRL_CMD_INTERNAL_CCU_SET_STREAM_STATE)
        CASE(NV2080_CTRL_CMD_INTERNAL_GSYNC_ATTACH_AND_INIT)
        CASE(NV2080_CTRL_CMD_INTERNAL_GSYNC_OPTIMIZE_TIMING_PARAMETERS)
        CASE(NV2080_CTRL_CMD_INTERNAL_GSYNC_GET_DISPLAY_IDS)
        CASE(NV2080_CTRL_CMD_INTERNAL_GSYNC_SET_STREO_SYNC)
        CASE(NV2080_CTRL_CMD_INTERNAL_GSYNC_GET_VERTICAL_ACTIVE_LINES)
        CASE(NV2080_CTRL_CMD_INTERNAL_GSYNC_IS_DISPLAYID_VALID)
        CASE(NV2080_CTRL_CMD_INTERNAL_GSYNC_SET_OR_RESTORE_RASTER_SYNC)
        CASE(NV2080_CTRL_CMD_INTERNAL_FBSR_INIT)
        CASE(NV2080_CTRL_CMD_INTERNAL_FIFO_TOGGLE_ACTIVE_CHANNEL_SCHEDULING)
        CASE(NV2080_CTRL_CMD_INTERNAL_MEMMGR_GET_VGPU_CONFIG_HOST_RESERVED_FB)
        CASE(NV2080_CTRL_CMD_INTERNAL_INIT_BRIGHTC_STATE_LOAD)
        CASE(NV2080_CTRL_CMD_INTERNAL_SMBPBI_PFM_REQ_HNDLR_CAP_UPDATE)
        CASE(NV2080_CTRL_CMD_INTERNAL_PMGR_PFM_REQ_HNDLR_STATE_LOAD_SYNC)
        CASE(NV2080_CTRL_CMD_INTERNAL_THERM_PFM_REQ_HNDLR_STATE_INIT_SYNC)
        CASE(NV2080_CTRL_CMD_INTERNAL_PERF_PFM_REQ_HNDLR_GET_PM1_STATE)
        CASE(NV2080_CTRL_CMD_INTERNAL_PERF_PFM_REQ_HNDLR_SET_PM1_STATE)
        CASE(NV2080_CTRL_CMD_INTERNAL_PMGR_PFM_REQ_HNDLR_UPDATE_EDPP_LIMIT)
        CASE(NV2080_CTRL_CMD_INTERNAL_THERM_PFM_REQ_HNDLR_UPDATE_TGPU_LIMIT)
        CASE(NV2080_CTRL_CMD_INTERNAL_PMGR_PFM_REQ_HNDLR_CONFIGURE_TGP_MODE)
        CASE(NV2080_CTRL_CMD_INTERNAL_PMGR_PFM_REQ_HNDLR_CONFIGURE_TURBO_V2)
        CASE(NV2080_CTRL_CMD_INTERNAL_PERF_PFM_REQ_HNDLR_GET_VPSTATE_INFO)
        CASE(NV2080_CTRL_CMD_INTERNAL_PERF_PFM_REQ_HNDLR_GET_VPSTATE_MAPPING)
        CASE(NV2080_CTRL_CMD_INTERNAL_PERF_PFM_REQ_HNDLR_SET_VPSTATE)
        CASE(NV2080_CTRL_CMD_INTERNAL_GCX_ENTRY_PREREQUISITE)
        CASE(NV2080_CTRL_CMD_INTERNAL_PMGR_UNSET_DYNAMIC_BOOST_LIMIT)
        CASE(NV2080_CTRL_CMD_INTERNAL_FIFO_GET_NUM_SECURE_CHANNELS)
        CASE(NV2080_CTRL_CMD_INTERNAL_BIF_DISABLE_SYSTEM_MEMORY_ACCESS)
        CASE(NV2080_CTRL_CMD_INTERNAL_DISP_PINSETS_TO_LOCKPINS)
        CASE(NV2080_CTRL_CMD_INTERNAL_DETECT_HS_VIDEO_BRIDGE)
        CASE(NV2080_CTRL_CMD_INTERNAL_DISP_SET_SLI_LINK_GPIO_SW_CONTROL)
        CASE(NV2080_CTRL_CMD_INTERNAL_SET_STATIC_EDID_DATA)
        CASE(NV2080_CTRL_CMD_INTERNAL_DISPLAY_ACPI_SUBSYSTEM_ACTIVATED)
        CASE(NV2080_CTRL_CMD_INTERNAL_DISPLAY_PRE_MODESET)
        CASE(NV2080_CTRL_CMD_INTERNAL_DISPLAY_POST_MODESET)
        CASE(NV2080_CTRL_CMD_INTERNAL_GPU_GET_FABRIC_PROBE_INFO)
        CASE(NV2080_CTRL_CMD_INTERNAL_GPU_START_FABRIC_PROBE)
        CASE(NV2080_CTRL_CMD_INTERNAL_GPU_STOP_FABRIC_PROBE)
        CASE(NV2080_CTRL_CMD_INTERNAL_GPU_SUSPEND_FABRIC_PROBE)
        CASE(NV2080_CTRL_CMD_INTERNAL_GPU_RESUME_FABRIC_PROBE)
        CASE(NV2080_CTRL_CMD_INTERNAL_GPU_INVALIDATE_FABRIC_PROBE)
        CASE(NV2080_CTRL_CMD_INTERNAL_CONF_COMPUTE_GET_STATIC_INFO)
        CASE(NV2080_CTRL_CMD_INTERNAL_CONF_COMPUTE_DERIVE_SWL_KEYS)
        CASE(NV2080_CTRL_CMD_INTERNAL_CONF_COMPUTE_DERIVE_LCE_KEYS)
        CASE(NV2080_CTRL_CMD_INTERNAL_CONF_COMPUTE_ROTATE_KEYS)
        CASE(NV2080_CTRL_CMD_INTERNAL_CONF_COMPUTE_RC_CHANNELS_FOR_KEY_ROTATION)
        CASE(NV2080_CTRL_CMD_INTERNAL_CONF_COMPUTE_SET_GPU_STATE)
        CASE(NV2080_CTRL_CMD_INTERNAL_CONF_COMPUTE_SET_SECURITY_POLICY)
        CASE(NV2080_CTRL_CMD_INTERNAL_MEMMGR_MEMORY_TRANSFER_WITH_GSP)
        CASE(NV2080_CTRL_CMD_INTERNAL_MEMSYS_GET_LOCAL_ATS_CONFIG)
        CASE(NV2080_CTRL_CMD_INTERNAL_MEMSYS_SET_PEER_ATS_CONFIG)
        CASE(NV2080_CTRL_CMD_INTERNAL_PMGR_PFM_REQ_HNDLR_GET_EDPP_LIMIT_INFO)
        CASE(NV2080_CTRL_CMD_INTERNAL_INIT_USER_SHARED_DATA)
        CASE(NV2080_CTRL_CMD_INTERNAL_USER_SHARED_DATA_SET_DATA_POLL)
        CASE(NV2080_CTRL_CMD_INTERNAL_CONTROL_GSP_TRACE)
        CASE(NV2080_CTRL_CMD_INTERNAL_GET_ENABLED_SEC2_CLASSES)
        CASE(NV2080_CTRL_CMD_INTERNAL_GR_CTXSW_SETUP_BIND)
        CASE(NV2080_CTRL_CMD_INTERNAL_NVLINK_POST_FATAL_ERROR_RECOVERY)
        CASE(NV2080_CTRL_CMD_INTERNAL_GPU_GET_GSP_RM_FREE_HEAP)
        CASE(NV2080_CTRL_CMD_INTERNAL_GSYNC_APPLY_STEREO_PIN_ALWAYS_HI_WAR)
        CASE(NV2080_CTRL_CMD_INTERNAL_HSHUB_GET_MAX_HSHUBS_PER_SHIM)
        CASE(NV2080_CTRL_CMD_INTERNAL_GSYNC_GET_RASTER_SYNC_DECODE_MODE)
        CASE(NV2080_CTRL_CMD_INTERNAL_GPU_GET_PF_BAR1_SPA)
        CASE(NV2080_CTRL_CMD_LPWR_DIFR_CTRL)
        CASE(NV2080_CTRL_CMD_LPWR_DIFR_PREFETCH_RESPONSE)
        CASE(NV2080_CTRL_CMD_MC_GET_ARCH_INFO)
        CASE(NV2080_CTRL_CMD_MC_SERVICE_INTERRUPTS)
        CASE(NV2080_CTRL_CMD_MC_GET_MANUFACTURER)
        CASE(NV2080_CTRL_CMD_MC_CHANGE_REPLAYABLE_FAULT_OWNERSHIP)
        CASE(NV2080_CTRL_CMD_MC_GET_ENGINE_NOTIFICATION_INTR_VECTORS)
        CASE(NV2080_CTRL_CMD_MC_GET_STATIC_INTR_TABLE)
        CASE(NV2080_CTRL_CMD_NVD_GET_DUMP_SIZE)
        CASE(NV2080_CTRL_CMD_NVD_GET_DUMP)
        CASE(NV2080_CTRL_CMD_NVD_GET_NOCAT_JOURNAL)
        CASE(NV2080_CTRL_CMD_NVD_SET_NOCAT_JOURNAL_DATA)
        CASE(NV2080_CTRL_CMD_NVD_INSERT_NOCAT_JOURNAL_RECORD)
        CASE(NV2080_CTRL_CMD_NVLINK_GET_SET_NVSWITCH_FLA_ADDR)
        CASE(NV2080_CTRL_CMD_NVLINK_EOM_CONTROL)
        CASE(NV2080_CTRL_CMD_READ_NVLINK_INBAND_RESPONSE)
        CASE(NV2080_CTRL_CMD_PERF_BOOST)
        CASE(NV2080_CTRL_CMD_PERF_RESERVE_PERFMON_HW)
        CASE(NV2080_CTRL_CMD_PERF_SET_POWERSTATE)
        CASE(NV2080_CTRL_CMD_PERF_SET_AUX_POWER_STATE)
        CASE(NV2080_CTRL_CMD_PERF_RATED_TDP_GET_CONTROL)
        CASE(NV2080_CTRL_CMD_PERF_RATED_TDP_SET_CONTROL)
        CASE(NV2080_CTRL_CMD_PERF_GET_GPUMON_PERFMON_UTIL_SAMPLES_V2)
        CASE(NV2080_CTRL_CMD_PERF_GPU_IS_IDLE)
        CASE(NV2080_CTRL_CMD_PERF_AGGRESSIVE_PSTATE_NOTIFY)
        CASE(NV2080_CTRL_CMD_PERF_GET_LEVEL_INFO)
        CASE(NV2080_CTRL_CMD_PERF_GET_LEVEL_INFO_V2)
        CASE(NV2080_CTRL_CMD_PERF_GET_VID_ENG_PERFMON_SAMPLE)
        CASE(NV2080_CTRL_CMD_PERF_GET_POWERSTATE)
        CASE(NV2080_CTRL_CMD_PERF_NOTIFY_VIDEOEVENT)
        CASE(NV2080_CTRL_CMD_PERF_GET_CURRENT_PSTATE)
        CASE(NV2080_CTRL_CMD_PMGR_GET_MODULE_INFO)
        CASE(NV2080_CTRL_CMD_GC6_ENTRY)
        CASE(NV2080_CTRL_CMD_GC6_EXIT)
        CASE(NV2080_CTRL_CMD_RC_READ_VIRTUAL_MEM)
        CASE(NV2080_CTRL_CMD_RC_GET_ERROR_COUNT)
        CASE(NV2080_CTRL_CMD_RC_GET_ERROR)
        CASE(NV2080_CTRL_CMD_RC_GET_ERROR_V2)
        CASE(NV2080_CTRL_CMD_RC_SET_CLEAN_ERROR_HISTORY)
        CASE(NV2080_CTRL_CMD_RC_GET_WATCHDOG_INFO)
        CASE(NV2080_CTRL_CMD_RC_DISABLE_WATCHDOG)
        CASE(NV2080_CTRL_CMD_RC_ENABLE_WATCHDOG)
        CASE(NV2080_CTRL_CMD_RC_RELEASE_WATCHDOG_REQUESTS)
        CASE(NV2080_CTRL_CMD_SET_RC_RECOVERY)
        CASE(NV2080_CTRL_CMD_GET_RC_RECOVERY)
        CASE(NV2080_CTRL_CMD_TDR_SET_TIMEOUT_STATE)
        CASE(NV2080_CTRL_CMD_RC_SOFT_DISABLE_WATCHDOG)
        CASE(NV2080_CTRL_CMD_SET_RC_INFO)
        CASE(NV2080_CTRL_CMD_GET_RC_INFO)
        CASE(NV2080_CTRL_CMD_TIMER_SCHEDULE)
        CASE(NV2080_CTRL_CMD_TIMER_CANCEL)
        CASE(NV2080_CTRL_CMD_TIMER_GET_TIME)
        CASE(NV2080_CTRL_CMD_TIMER_GET_REGISTER_OFFSET)
        CASE(NV2080_CTRL_CMD_TIMER_GET_GPU_CPU_TIME_CORRELATION_INFO)
        CASE(NV2080_CTRL_CMD_TIMER_SET_GR_TICK_FREQ)
        CASE(NV2080_CTRL_CMD_OS_UNIX_GC6_BLOCKER_REFCNT)
        CASE(NV2080_CTRL_CMD_OS_UNIX_ALLOW_DISALLOW_GCOFF)
        CASE(NV2080_CTRL_CMD_OS_UNIX_AUDIO_DYNAMIC_POWER)
        CASE(NV2080_CTRL_CMD_OS_UNIX_INSTALL_PROFILER_HOOKS)
        CASE(NV2080_CTRL_CMD_OS_UNIX_FLUSH_SNAPSHOT_BUFFER)
        CASE(NV2080_CTRL_CMD_OS_UNIX_STOP_PROFILER)
        CASE(NV2080_CTRL_CMD_OS_UNIX_VIDMEM_PERSISTENCE_STATUS)
        CASE(NV2080_CTRL_CMD_OS_UNIX_UPDATE_TGP_STATUS)
        CASE(NV2080_CTRL_CMD_VGPU_MGR_INTERNAL_BOOTLOAD_GSP_VGPU_PLUGIN_TASK)
        CASE(NV2080_CTRL_CMD_VGPU_MGR_INTERNAL_SHUTDOWN_GSP_VGPU_PLUGIN_TASK)
        CASE(NV2080_CTRL_CMD_VGPU_MGR_INTERNAL_PGPU_ADD_VGPU_TYPE)
        CASE(NV2080_CTRL_CMD_VGPU_MGR_INTERNAL_ENUMERATE_VGPU_PER_PGPU)
        CASE(NV2080_CTRL_CMD_VGPU_MGR_INTERNAL_CLEAR_GUEST_VM_INFO)
        CASE(NV2080_CTRL_CMD_VGPU_MGR_INTERNAL_GET_VGPU_FB_USAGE)
        CASE(NV2080_CTRL_CMD_VGPU_MGR_INTERNAL_SET_VGPU_ENCODER_CAPACITY)
        CASE(NV2080_CTRL_CMD_VGPU_MGR_INTERNAL_VGPU_PLUGIN_CLEANUP)
        CASE(NV2080_CTRL_CMD_VGPU_MGR_INTERNAL_GET_PGPU_FS_ENCODING)
        CASE(NV2080_CTRL_CMD_VGPU_MGR_INTERNAL_GET_PGPU_MIGRATION_SUPPORT)
        CASE(NV2080_CTRL_CMD_VGPU_MGR_INTERNAL_SET_VGPU_MGR_CONFIG)
        CASE(NV2080_CTRL_CMD_VGPU_MGR_INTERNAL_FREE_STATES)
        CASE(NV2080_CTRL_CMD_VGPU_MGR_INTERNAL_GET_FRAME_RATE_LIMITER_STATUS)
        CASE(NV906F_CTRL_CMD_NULL)
        CASE(NV906F_CTRL_GET_CLASS_ENGINEID)
        CASE(NV906F_CTRL_CMD_INTERNAL_RESET_CHANNEL_REASON_FAKE_ERROR)
        CASE(NV906F_CTRL_CMD_RESET_CHANNEL)
        CASE(NV906F_CTRL_CMD_EVENT_SET_NOTIFICATION)
        CASE(NV906F_CTRL_CMD_GET_DEFER_RC_STATE)
        CASE(NV906F_CTRL_CMD_GET_MMU_FAULT_INFO)
        CASE(NVA06F_CTRL_CMD_NULL)
        CASE(NVA06F_CTRL_CMD_EVENT_SET_NOTIFICATION)
        CASE(NVA06F_CTRL_CMD_EVENT_SET_TRIGGER)
        CASE(NVA06F_CTRL_CMD_GPFIFO_SCHEDULE)
        CASE(NVA06F_CTRL_CMD_BIND)
        CASE(NVA06F_CTRL_CMD_SET_ERROR_NOTIFIER)
        CASE(NVA06F_CTRL_CMD_SET_INTERLEAVE_LEVEL)
        CASE(NVA06F_CTRL_CMD_GET_INTERLEAVE_LEVEL)
        CASE(NVA06F_CTRL_CMD_RESTART_RUNLIST)
        CASE(NVA06F_CTRL_CMD_STOP_CHANNEL)
        CASE(NVA06F_CTRL_CMD_GET_CONTEXT_ID)
        CASE(NVA06F_CTRL_CMD_INTERNAL_STOP_CHANNEL)
        CASE(NVA06F_CTRL_CMD_INTERNAL_GPFIFO_SCHEDULE)
        default: return "unknown";
    }
    #undef CASE
}
